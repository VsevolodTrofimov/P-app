var editor;describe("Test generate",function(){var e,t;describe("Core",function(){it("should be all defined",function(){expect(generate).toBeDefined(),expect(generate.register).toBeDefined(),expect(generate.data).toBeDefined()})}),describe("Register",function(){beforeEach(function(){editor=void 0,e="question",t="text"}),describe("Elements",function(){it("should be registered over empty subtype",function(){expect(generate.data[e][t]).toBeDefined()}),it("should be registered over empty existing eledit",function(){expect(generate.data[e][t].element).toBeDefined(),expect(generate.data[e][t].edit).toBeDefined()}),it("should contain sample builder",function(){var i=generate.data[e][t].element.sample.build;expect(i).toBeDefined(),expect(i()).toBeNode()}),it("should make right simple build",function(){var i=generate.data[e][t].element.sample.build;expect(i).toBeDefined();var n=i().find(".__value").text();expect(n).toEqual(generate.data[e][t].element.sample.value.text)}),it("should make custom build",function(){var i=generate.data[e][t].element.build;expect(i).toBeDefined();var n={text:"Test Val <b>))</b>"},a=i(n).find(".__value").html();expect(a).toEqual(n.text)}),it("should bind editing",function(){var i="1";editor={edit:{let:function(e){e.attr("edit",i)}}},console.log(editor);var n=generate.data[e][t].element.build;expect(n).toBeDefined();var a=n(i).attr("edit");expect(a).toEqual(i)})})})});